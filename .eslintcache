[{"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/index.js":"1","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/App.js":"2","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/serviceWorkerRegistration.js":"3","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/reportWebVitals.js":"4","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/About.js":"5","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/BookRecs.js":"6","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/Home.js":"7","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/Calendar.js":"8","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/sideMenu.js":"9","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/Landing.js":"10","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/services/book.service.js":"11","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/EventCalendar.js":"12","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/OfficerBio.js":"13","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/BookOfTheMonth.js":"14","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/services/voteBook.service.js":"15","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/http-common.js":"16","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/services/openlibrary.service.js":"17","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/Voting.js":"18","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/VoteBookCard.js":"19","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/Officers.js":"20","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/Footer.js":"21","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/services/calendar.service.js":"22","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/AdminPanel.js":"23"},{"size":864,"mtime":1618264611837,"results":"24","hashOfConfig":"25"},{"size":772,"mtime":1618429222292,"results":"26","hashOfConfig":"25"},{"size":5064,"mtime":1618264611837,"results":"27","hashOfConfig":"25"},{"size":362,"mtime":1618264611837,"results":"28","hashOfConfig":"25"},{"size":2350,"mtime":1618264611834,"results":"29","hashOfConfig":"25"},{"size":6459,"mtime":1618604249869,"results":"30","hashOfConfig":"25"},{"size":889,"mtime":1618264611835,"results":"31","hashOfConfig":"25"},{"size":624,"mtime":1618264611834,"results":"32","hashOfConfig":"25"},{"size":647,"mtime":1618429222295,"results":"33","hashOfConfig":"25"},{"size":2701,"mtime":1629388987406,"results":"34","hashOfConfig":"25"},{"size":608,"mtime":1618427885364,"results":"35","hashOfConfig":"25"},{"size":1182,"mtime":1618264611834,"results":"36","hashOfConfig":"25"},{"size":683,"mtime":1629931750816,"results":"37","hashOfConfig":"25"},{"size":1411,"mtime":1618604249867,"results":"38","hashOfConfig":"25"},{"size":1258,"mtime":1629912766849,"results":"39","hashOfConfig":"25"},{"size":172,"mtime":1629912736118,"results":"40","hashOfConfig":"25"},{"size":908,"mtime":1618264611838,"results":"41","hashOfConfig":"25"},{"size":3626,"mtime":1618785744477,"results":"42","hashOfConfig":"25"},{"size":1528,"mtime":1618785744476,"results":"43","hashOfConfig":"25"},{"size":3419,"mtime":1629932795106,"results":"44","hashOfConfig":"25"},{"size":987,"mtime":1618624277367,"results":"45","hashOfConfig":"25"},{"size":702,"mtime":1629912758600,"results":"46","hashOfConfig":"25"},{"size":12994,"mtime":1618429182327,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"sal4q9",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/index.js",[],["104","105"],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/App.js",["106","107"],"import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport logo from \"./logo.svg\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Home from \"./components/Home\";\nimport BookRecs from \"./components/BookRecs\";\nimport Voting from \"./components/Voting\";\nimport AdminPanel from \"./components/AdminPanel\";\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/Voting\" component={Voting} exact />\n        <Route path=\"/BookRecs\" component={BookRecs} exact />\n        <Route path=\"/AdminPanel\" component={AdminPanel} exact />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\nexport { App };\n","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/serviceWorkerRegistration.js",[],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/reportWebVitals.js",[],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/About.js",[],["108","109"],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/BookRecs.js",["110","111","112","113","114"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, Header, Popup, Icon, Form, Input } from \"semantic-ui-react\";\n\nimport \"../css/BookRecs.css\";\nimport \".././App.css\";\n\nimport OpenLibraryService from \"../services/openlibrary.service\";\nimport BookDataService from \"../services/book.service\";\n\nimport { sideMenu as Menu } from \"./sideMenu.js\";\nimport Footer from \"./Footer.js\";\n\nfunction BookRecs() {\n  /*\n  Code that accesses an API has to be done like this (with promise syntax) since you have to\n  wait for the API to respond before using the results of the call.\n  */\n  const [data, setData] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      const result = await BookDataService.getAll();\n      setData(result.data);\n    }\n    fetchData();\n  }, []);\n  /* From here on you can access the data object which is an array of book objects.\n     Any code that access data will run once when the page loads and then again when the\n     API returns.\n  */\n  let tableContents = [];\n  for (var bookIndex in data) {\n    if (data[bookIndex] !== undefined) {\n      let book = data[bookIndex];\n      let row = [\n        <tr key={book.title}>\n          <td>{book.title}</td>\n          <td>{book.author}</td>\n          <td>{book.triggerWarnings}</td>\n          <td>{book.notes}</td>\n        </tr>\n      ];\n      tableContents.push(row);\n    }\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const [bookData, setBookData] = useState({});\n\n  //Get data from openlibrary\n  useEffect(() => {\n    async function fetchData() {\n      const book = await OpenLibraryService.getBookFromIsbn(isbn);\n      //Each query returns an object based on the name of the ISBN so we loop through the book.data\n      //object to reference the isbn named object without having to hardcode the isbn.\n      for (var data2 in book.data) {\n        var data = book.data[data2];\n      }\n      setBookData(data);\n    }\n    fetchData();\n  });\n\n  //Define text variables\n  var primaryAuthor = \"\";\n  var title = \"\";\n\n  if(bookData) {\n    if (bookData.authors != undefined) {\n      primaryAuthor = bookData.authors[0].name;\n    }\n    if (bookData.title != undefined) {\n      title = bookData.title;\n    }\n  }\n\n  const [isbn, setISBN] = useState();\n  const [notes, setNotes] = useState();\n  const [triggerWarnings, setTriggerWarnings] = useState();\n  const handleSubmit= (e) => {\n    e.preventDefault();\n\n    var password = prompt(\"Enter the secret member voting password! (Contact the club officers to get this password)\");\n    const newBook = {\n      title: title,\n      author: primaryAuthor,\n      isbn: isbn,\n      triggerWarnings: triggerWarnings,\n      notes: notes,\n      password: password\n    }\n    console.log(newBook);\n    BookDataService.create(newBook);\n    setISBN('');\n    setTriggerWarnings('');\n    setNotes('');\n    setOpen(false);\n    window.location.reload();\n  }\n\n  return (\n    //The outer-container contains everything including the menu\n    //The page wrap must contain everything on the page except the menu\n    <div id=\"outer-container\">\n      <Menu pageWrapId={\"page-wrap\"} outerContainerId={\"outer-container\"} />\n      <div id=\"page-wrap\" class=\"background-color\">\n        <div id=\"page\">\n          <center>\n            <h1>Book Recommendations</h1>\n          </center>\n          <div id=\"content\">\n            <Modal\n              centered={true}\n              closeIcon\n              open={open}\n              trigger={\n                <Button id=\"btn\" icon labelPosition='left' floated='right'>\n                  <Icon name='add square'/>\n                  Add Book Rec\n                </Button>}\n              size='tiny'\n              onClose={() => setOpen(false)}\n              onOpen={() => setOpen(true)}\n            >\n              <Header icon='add square' content='Add Book Recommendation' />\n              <Modal.Content>\n                <Form>\n                  <Form.Field>\n                    <label id=\"isbn-label\">ISBN\n                  <Popup\n                    content='The International Standard Book Number (ISBN) is a 13-digit number that uniquely identifies books and book-like products published internationally.'\n                    trigger={\n                      <Icon id=\"isbn-popup\" name=\"question circle outline\" />\n                    }\n                  />\n                  </label>\n                    <a id=\"isbn-link\" href=\"https://isbnsearch.org/\" target=\"_blank\">\n                    <p>Click here to search for ISBNs</p>\n                  </a>\n                  <input\n                    fluid\n                    type='text'\n                    name='isbn'\n                    value={isbn}\n                    placeholder='ISBN'\n                    onChange={e => setISBN(e.target.value)}\n                  />\n                  </Form.Field>\n                  <Form.TextArea\n                    fluid\n                    type='text'\n                    maxLength=\"255\"\n                    name='triggerWarnings'\n                    value={triggerWarnings}\n                    label='Trigger Warnings'\n                    placeholder='Trigger Warnings'\n                    onChange={e => setTriggerWarnings(e.target.value)}\n                  />\n                  <Form.TextArea\n                    fluid\n                    type='text'\n                    maxLength=\"1000\"\n                    name='notes'\n                    value={notes}\n                    label='Notes'\n                    placeholder='Notes'\n                    onChange={e => setNotes(e.target.value)}\n                  />\n                  <Form.Button color=\"blue\" onClick={handleSubmit}>Submit</Form.Button>\n                </Form>\n              </Modal.Content>\n            </Modal>\n            {!tableContents || tableContents.length === 0 ? (\n              <center>\n                <p class=\"nothing-yet\">There are no book recommendations yet.</p>\n              </center>\n            ) : (\n              <table className=\"ui celled striped table unstackable\">\n                <thead>\n                  <tr>\n                    <th>TITLE</th>\n                    <th>AUTHOR</th>\n                    <th>TRIGGER WARNINGS</th>\n                    <th>NOTES</th>\n                  </tr>\n                </thead>\n                <tbody>{tableContents}</tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BookRecs;\nexport { BookRecs };\n","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/Home.js",[],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/Calendar.js",[],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/sideMenu.js",[],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/Landing.js",["115","116","117"],"import React, { useState, useEffect } from \"react\";\nimport \"../css/Landing.css\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport BookOfTheMonth from \"./BookOfTheMonth.js\";\nimport wave from '../assets/images/wave.svg';\nimport bookDisplay from '../assets/images/11070.png';\nimport VoteBookService from \"../services/voteBook.service\"\n\n\nfunction Landing() {\n\n  const [spoilerISBN, setSpoilerISBN] = useState(\"9781847941831\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await VoteBookService.getVoteBooks();\n      const data = result.data;\n      for(var index in data) {\n        if(data[index].isSpoilerBook) {\n          setSpoilerISBN(data[index].isbn);\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div id=\"landing-container\">\n      <div id=\"landing-nav\">\n        <a className=\"nav-button\" href=\"#cal-outer-container\"><h6>CALENDAR</h6></a>\n        <a className=\"nav-button\" href=\"#officer-page\"><h6>OFFICERS</h6></a>\n        <BookOfTheMonth\n              props={{\n                ISBN: spoilerISBN\n              }}\n            />\n      </div>\n      {/*<img src={wave} id=\"landing-wave\"></img>*/\n      /* \"M0,288L1440,32L1440,320L0,320Z\" */}\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\" id=\"landing-wave\">\n        <defs>\n          <linearGradient id=\"MyGradient\" gradientTransform=\"rotate(90)\">\n            <stop offset=\"30%\"  stopColor=\"#153154\" />\n            <stop offset=\"100%\" stopColor=\"#22436c\" />\n          </linearGradient>\n        </defs>\n        <path fill=\"url(#MyGradient)\" fillOpacity=\"1\" d=\"M0,256L80,245.3C160,235,320,213,480,224C640,235,800,277,960,277.3C1120,277,1280,235,1360,213.3L1440,192L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\">\n        </path>\n      </svg>\n      <div id=\"landing-content\">\n        <div id=\"landing-welcome\">\n          <div id=\"welcome-text\">\n            <h5>WELCOME TO</h5>\n            <h1>HOOKED TO <br></br>BOOK CLUB</h1>\n          </div>\n          <div id=\"welcome-buttons\">\n           <AwesomeButton type=\"primary\" className=\"button\" href=\"https://discord.gg/QAc8c3S\"><Icon name='discord' size=\"large\"/> Discord</AwesomeButton>\n           <AwesomeButton type=\"primary\" className=\"button\" href=\"https://groupme.com/join_group/61080275/ExWii84e\"><Icon name='group' size=\"large\"/>GroupMe</AwesomeButton>\n          </div>\n        </div>\n        <div id=\"landing-botm\">\n          <img src={bookDisplay} id=\"book-display\"></img>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Landing;\nexport { Landing };\n","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/services/book.service.js",[],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/EventCalendar.js",["118"],"import FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport CalendarService from \"../services/calendar.service\";\nimport React, { useState, useEffect } from \"react\";\n\nimport \"../css/Calendar.css\";\n\nfunction EventCalendar() {\n  /*\n  Code that accesses an API has to be done like this (with promise syntax) since you have to\n  wait for the API to respond before using the results of the call.\n  */\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await CalendarService.getEvents();\n      // console.log(result.data)\n      setData(result.data);\n    }\n    fetchData();\n  }, []); //The empty array keeps this function from being called continuously\n\n  //Create events array from all events pulled from database\n  let events = []\n  for(var eventIndex in data) {\n    if(eventIndex != undefined) {\n      events.push(data[eventIndex])\n    }\n  }\n\n  return (\n    <FullCalendar\n      id=\"calender\"\n      height=\"500px\"\n      defaultView=\"dayGridMonth\"\n      plugins={[dayGridPlugin]}\n      events={events}\n    />\n  );\n  }\n\n  export default EventCalendar;\n  export { EventCalendar };\n","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/OfficerBio.js",[],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/BookOfTheMonth.js",["119","120","121","122"],"import React, { useState, useEffect } from \"react\";\nimport OpenLibraryService from \"../services/openlibrary.service\";\nimport \"../css/Landing.css\";\nimport { Icon } from \"semantic-ui-react\";\n\nfunction BookOfTheMonth({ props }) {\n  const ISBN = props.ISBN;\n  const [bookData, setData] = useState({});\n\n  //Get data from openlibrary\n  useEffect(() => {\n    async function fetchData() {\n      const book = await OpenLibraryService.getBookFromIsbn(ISBN);\n      //Each query returns an object based on the name of the ISBN so we loop through the book.data\n      //object to reference the isbn named object without having to hardcode the isbn.\n      for (var data2 in book.data) {\n        var data = book.data[data2];\n      }\n      setData(data);\n    }\n    fetchData();\n  });\n\n  //Define text variables\n  var coverLink = \"\";\n  var primaryAuthor = \"\";\n  var title = \"\";\n\n  if(bookData) {\n    if (bookData.cover != undefined) {\n      coverLink = bookData.cover.large;\n    }\n    if (bookData.authors != undefined) {\n      primaryAuthor = bookData.authors[0].name;\n    }\n    if (bookData.title != undefined) {\n      title = bookData.title;\n    }\n  }\n\n  //Return component\n  return (\n    <div id=\"spoiler-book\">\n      <Icon name=\"book\" size=\"large\"></Icon>\n        Spoiler Book:\n        {bookData && <p><b>{title + \" - \" + primaryAuthor}</b></p>}\n    </div>\n  );\n}\n\nexport default BookOfTheMonth;\nexport { BookOfTheMonth };\n","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/services/voteBook.service.js",[],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/http-common.js",[],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/services/openlibrary.service.js",[],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/Voting.js",["123","124","125"],"import React, { useState, useEffect } from \"react\";\nimport {Radio, Form, Button} from 'semantic-ui-react';\nimport VoteBookService from \"../services/voteBook.service\";\nimport { sideMenu as Menu } from \"./sideMenu.js\";\nimport VoteBookCard from \"./VoteBookCard.js\";\n\nimport \".././App.css\";\nimport '../css/Voting.css';\n\nfunction Voting() {\n  /*\n  Code that accesses an API has to be done like this (with promise syntax) since you have to\n  wait for the API to respond before using the results of the call.\n  */\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await VoteBookService.getVoteBooks();\n      setData(result.data);\n    }\n    fetchData();\n  }, []); //The empty array keeps this function from being called continuously\n\n  /*\n  END API CODE\n  */\n  const [selectedBook, setValue] = useState({});\n  const handleChange = (event, {value}) => setValue({ value });\n\n  function onSubmit() {\n    if(selectedBook != undefined) {\n      var currentBook = selectedBook.value;\n      console.log(selectedBook.value.isbn, selectedBook.value.voteCount+1);\n      var password = prompt(\"Enter the secret member voting password! (Contact the club officers to get this password)\");\n      VoteBookService.updateVoteBookCount(currentBook.isbn, currentBook.voteCount+1, password);\n      //Refresh the page to update the vote count\n      window.location.reload();\n    }\n    else {\n      alert(\"No book selected!\");\n    }\n  }\n\n  function createVoteCardFormField(book) {\n    console.log(selectedBook.value);\n    var label = book.title + \" \" + book.voteCount;\n    return (\n      <div>\n        <VoteBookCard props={{ ISBN: book.isbn }} />\n          <Form.Field>\n            <div id=\"vote-radio\">\n            <Radio \n              label={label}\n              name='radioGroup'\n              value={book}\n              checked={\n                //THE UNDEFINED CHECK MUST COME BEFORE CHECKING THE VALUE OTHERWISE THE PROGRAM\n                //TIRES TO READ THE ISBN OF VALUE WHICH WILL BE UNDEFINED BEFORE THE FIRST SELECTION\n                selectedBook.value != undefined && selectedBook.value.isbn === book.isbn\n              }\n              onChange={handleChange}\n            />\n            </div>\n          </Form.Field>\n      </div>\n    )\n  }\n\n  function createVoteCardFormFieldList(bookList) {\n    var fields = bookList.map(createVoteCardFormField);\n    return fields;\n  }\n\n  let bookList = [];\n  if(data[0] != undefined) {\n      for(var bookIndex in data)\n      {\n        console.log(data[bookIndex].title);\n        if(!data[bookIndex].isSpoilerBook) {\n          bookList.push(data[bookIndex]);\n        }\n      }\n\n  }\n\n  return (\n    //The outer-container contains everything including the menu\n    //The page wrap must contain everything on the page except the menu\n    <div id=\"outer-container\">\n      <Menu pageWrapId={\"page-wrap\"} outerContainerId={\"outer-container\"} />\n      <div id=\"page-wrap\" class=\"background-color\">\n        <center>\n          <h1>Voting</h1>\n        </center>\n      <div id=\"vote-holder\">\n        <Form>\n          <Form.Group widths='equal'>\n            {createVoteCardFormFieldList(bookList)}\n          </Form.Group>\n        </Form>\n        </div>\n        {createVoteCardFormFieldList(bookList).length > 0 ? (\n          <div id=\"submit-button\">\n          <Button secondary size=\"large\" onClick={onSubmit}>Submit</Button>\n          </div>\n        ) : (\n          <center>\n            <p class=\"nothing-yet\">There is nothing to vote on yet.</p>\n          </center>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Voting;\nexport { Voting };\n","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/VoteBookCard.js",[],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/Officers.js",["126","127"],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/Footer.js",["128","129","130","131"],"import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { Icon } from 'semantic-ui-react';\n\nimport \".././App.css\";\nimport '../css/Footer.css';\nimport EventCalendar from './EventCalendar'\n\nfunction Footer() {\n  return (\n    //The outer-container contains everything including the menu\n    //The page wrap must contain everything on the page except the menu\n    <div id=\"footer\">\n      <div id=\"footer-top\"></div>\n      <div id=\"footer-bottom\">\n        <div id=\"footer-icons\">\n          <a class=\"footer-icon\" href=\"https://discord.gg/QAc8c3S\" target=\"_blank\">\n            <Icon name=\"discord\" size=\"large\"/>\n          </a>\n          <a class=\"footer-icon\" href=\"https://groupme.com/join_group/61080275/ExWii84e\" target=\"_blank\">\n            <Icon link name=\"group\" size=\"large\"/>\n          </a>\n        </div>\n        <div>\n          <p>Made with ♥ for CEN3031 and HTTB Club</p>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Footer\nexport { Footer };\n","/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/services/calendar.service.js",[],"/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/src/components/AdminPanel.js",["132","133"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Form, Segment, Table } from \"semantic-ui-react\";\nimport \".././App.css\";\nimport '../css/AdminPanel.css';\nimport CalendarService from \"../services/calendar.service\";\nimport VoteBookService from \"../services/voteBook.service\";\nimport BookDataService from \"../services/book.service\";\n\nimport { sideMenu as Menu } from \"./sideMenu.js\";\n\n\n\nfunction AdminPanel() {\n  const [addEventTitle, setAddEventTitle] = useState(\"\");\n  const [deleteEventTitle, setDeleteEventTitle] = useState(\"\");\n  const [addEventDate, setAddEventDate] = useState(\"\");\n\n  const [voteBookTitle, setVoteBookTitle] = useState(\"\");\n  const [voteBookIsbn, setVoteBookIsbn] = useState(\"\");\n\n  const [bookRecIsbn, setBookRecIsbn] = useState(\"\");\n\n  const [spoilerBookIsbn, setSpoilerBookIsbn] = useState(\"\");\n  const [spoilerBookTitle, setSpoilerBookTitle] = useState(\"\");\n\n  async function handleAddEvent() {\n    var password = prompt(\"Please enter the admin password\", \"Password\");\n    const response = await (CalendarService.addEvent(addEventTitle, addEventDate, password));\n    if(response.data.title !== undefined) {\n      alert(\"Event \" + response.data.title + \" successfully added to the calendar!\");\n    }\n    else if(response.data.message !== undefined) {\n      alert(response.data.message);\n    }\n    else {\n      alert(\"An error occured while adding this event\");\n    }\n    //Clear form fields after submission\n    setAddEventTitle(\"\");\n    setAddEventDate(\"\");\n    window.location.reload();\n  }\n\n  async function handleDeleteEvent() {\n    var password = prompt(\"Please enter the admin password\", \"Password\");\n    const response = await (CalendarService.deleteEvent(deleteEventTitle, password));\n    alert(response.data.message);\n    //Clear form fields after submission\n    setDeleteEventTitle(\"\");\n    window.location.reload();\n  }\n\n  async function handleAddVoteBook() {\n    var password = prompt(\"Please enter the admin password\", \"Password\");\n    const response = await (VoteBookService.createVoteBook(voteBookTitle, voteBookIsbn, false, password));\n    if(response.data.isbn == voteBookIsbn)\n      alert(\"Book added to poll successfully!\");\n    else\n      alert(\"There was an error adding the book to the poll.\");\n    window.location.reload();\n  }\n\n  async function handleRemoveVoteBook() {\n    var password = prompt(\"Please enter the admin password\", \"Password\");\n    const response = await (VoteBookService.deleteVoteBook(voteBookIsbn, password));\n    alert(response.data.message);\n    window.location.reload();\n  }\n\n  async function handleDeleteBookRec() {\n    var password = prompt(\"Please enter the admin password\", \"Password\");\n    const response = await (BookDataService.delete(bookRecIsbn, password));\n    alert(response.data.message);\n    window.location.reload();\n  }\n\n  async function handleUpdateSpoilerBook() {\n    var password = prompt(\"Please enter the admin password\", \"Password\");\n    const response = await (VoteBookService.updateSpoilerBook(spoilerBookIsbn, spoilerBookTitle, password));\n    setSpoilerBookIsbn(\"\");\n    setSpoilerBookTitle(\"\");\n    alert(response.data.message);\n    window.location.reload();\n  }\n\n\n  const [eventData, setEventData] = useState({});\n  const [voteBookData, setVoteBookData] = useState({});\n  const [bookRecData, setBookRecData] = useState({});\n  const [spoilerBookData, setSpoilerBookData] = useState({});\n\n  useEffect(() => {\n    async function fetchCalendarData() {\n      /* Get data for events */\n      const calendarResult = await CalendarService.getEvents();\n      var calendarData = [];\n      for(var index in calendarResult.data) {\n        var eventInfo = {\n          title: calendarResult.data[index].title,\n          date: calendarResult.data[index].date\n        }\n        calendarData.push(eventInfo);\n      }\n      setEventData(calendarData);\n    }\n\n    async function fetchVoteBookData() {\n      /* Get data on vote books */\n      const voteBookResult = await VoteBookService.getVoteBooks();\n      var voteBookDataList = [];\n      for(var index in voteBookResult.data) {\n        var voteBookInfo = {\n          title: voteBookResult.data[index].title,\n          isbn: voteBookResult.data[index].isbn\n        }\n        if(!voteBookResult.data[index].isSpoilerBook) {\n          voteBookDataList.push(voteBookInfo);\n        } else {\n          /*** The spoiler book data is set here ***/\n          setSpoilerBookData(voteBookInfo);\n        }\n      }\n      setVoteBookData(voteBookDataList);\n    }\n\n    async function fetchBookRecData() {\n      const bookRecResult = await BookDataService.getAll();\n      var bookRecDataList = [];\n      for(var index in bookRecResult.data) {\n        var bookRecInfo = {\n          title: bookRecResult.data[index].title,\n          isbn: bookRecResult.data[index].isbn\n        }\n        bookRecDataList.push(bookRecInfo);\n      }\n      setBookRecData(bookRecDataList);\n    }\n\n    fetchCalendarData();\n    fetchVoteBookData();\n    fetchBookRecData();\n  }, []);\n\n  console.log(spoilerBookData);\n\n  function renderEventTableData() {\n    let eventTableRows = [];\n    for(var index in eventData) {\n      let row = [\n        <Table.Row>\n          <Table.Cell>{eventData[index].title}</Table.Cell>\n          <Table.Cell>{eventData[index].date}</Table.Cell>\n        </Table.Row>\n      ];\n      eventTableRows.push(row);\n    }\n    return eventTableRows;\n  }\n\n  function renderVoteTableData() {\n    let voteTableRows = [];\n    for(var index in voteBookData) {\n      let row = [\n        <Table.Row>\n          <Table.Cell>{voteBookData[index].title}</Table.Cell>\n          <Table.Cell>{voteBookData[index].isbn}</Table.Cell>\n        </Table.Row>\n      ];\n      voteTableRows.push(row);\n    }\n    return voteTableRows;\n  }\n\n  function renderBookRecTableData() {\n    let bookRecTableRows = [];\n    for(var index in bookRecData) {\n      let row = [\n        <Table.Row>\n          <Table.Cell>{bookRecData[index].title}</Table.Cell>\n          <Table.Cell>{bookRecData[index].isbn}</Table.Cell>\n        </Table.Row>\n      ];\n      bookRecTableRows.push(row);\n    }\n    return bookRecTableRows;\n  }\n\n  function renderSpoilerBookData() {\n    let row = [\n      <Table.Row>\n        <Table.Cell>{spoilerBookData.title}</Table.Cell>\n        <Table.Cell>{spoilerBookData.isbn}</Table.Cell>\n      </Table.Row>\n    ]\n    return row;\n  }\n\n  return (\n    //The outer-container contains everything including the menu\n    //The page wrap must contain everything on the page except the menu\n    <div id=\"outer-container\">\n      <div id=\"admin-outer\">\n      <Menu pageWrapId={\"page-wrap\"} outerContainerId={\"outer-container\"} />\n      <div id=\"page-wrap\">\n        <center>\n          <h1>Admin Panel</h1>\n        </center>\n        <div id=\"forms-container\">\n          <div id=\"add-calendar\" className=\"separate-form\">\n\n          <Segment inverted>\n          <h2>Add event to calendar</h2>\n          <Form inverted onSubmit={handleAddEvent}>\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                    fluid\n                    label=\"Event Title\"\n                    placeholder='GBM #1'\n                    name='title'\n                    value={addEventTitle}\n                    onChange={(e, { name, value }) => setAddEventTitle(value)}\n              />\n              <Form.Input\n                    fluid\n                    label=\"Event Date\"\n                    placeholder=\"YYYY-MM-DD\"\n                    name='date'\n                    value={addEventDate}\n                    onChange={(e, { name, value }) => setAddEventDate(value)}\n              />\n              <Form.Button id=\"formsubmitbutton\" content='Add Event' />\n            </Form.Group>\n          </Form>\n          <Table unstackable selectable striped>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Event Title</Table.HeaderCell>\n                <Table.HeaderCell>Event Date</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {renderEventTableData()}\n\n          </Table.Body>\n          </Table>\n          </Segment>\n          </div>\n\n\n        <div id=\"delete-calendar\" className=\"separate-form\">\n\n          <Segment inverted>\n        <h2>Delete event from calendar</h2>\n        <Form inverted onSubmit={handleDeleteEvent}>\n          <Form.Group widths='equal'>\n            <Form.Input\n                  label=\"Event Title\"\n                  placeholder='GBM #1'\n                  name='title'\n                  value={deleteEventTitle}\n                  onChange={(e, { name, value }) => setDeleteEventTitle(value)}\n            />\n            <Form.Button id=\"formsubmitbutton\" content='Delete Event' />\n          </Form.Group>\n        </Form>\n        <Table unstackable selectable striped>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Event Title</Table.HeaderCell>\n                <Table.HeaderCell>Event Date</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {renderEventTableData()}\n            </Table.Body>\n          </Table>\n        </Segment>\n        </div>\n\n\n        <div id=\"change-vote\" className=\"separate-form\">\n\n          <Segment inverted>\n        <h2> Add/Remove Book To/From Voting Poll </h2>\n        <Form inverted>\n          <Form.Group widths='equal'>\n            <Form.Input\n                  label=\"Title\"\n                  placeholder='The Name of the Wind'\n                  name='title'\n                  value={voteBookTitle}\n                  onChange={(e, { name, value }) => setVoteBookTitle(value)}\n            />\n            <Form.Input\n                  label=\"ISBN\"\n                  placeholder='9781423389262'\n                  name='isbn'\n                  value={voteBookIsbn}\n                  onChange={(e, { name, value }) => setVoteBookIsbn(value)}\n            />\n            <Form.Button id=\"formsubmitbutton\" onClick={handleAddVoteBook} content=\"Add Book\" />\n            <Form.Button id=\"formsubmitbutton\" onClick={handleRemoveVoteBook} content=\"Remove Book\" />\n          </Form.Group>\n        </Form>\n        <Table unstackable selectable striped>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Title</Table.HeaderCell>\n                <Table.HeaderCell>ISBN</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {renderVoteTableData()}\n\n          </Table.Body>\n          </Table>\n        </Segment>\n        </div>\n\n        <div id=\"delete-rec\" className=\"separate-form\">\n\n          <Segment inverted>\n        <h2> Delete Book From Book Recommendations </h2>\n        <Form inverted onSubmit={handleDeleteBookRec}>\n          <Form.Group widths='equal'>\n            <Form.Input\n                  label=\"Book ISBN\"\n                  placeholder='1234567890123'\n                  name='isbn'\n                  value={bookRecIsbn}\n                  onChange={(e, { name, value }) => setBookRecIsbn(value)}\n            />\n            <Form.Button id=\"formsubmitbutton\" content='Remove Book' />\n          </Form.Group>\n        </Form>\n        <Table unstackable selectable striped>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Title</Table.HeaderCell>\n                <Table.HeaderCell>ISBN</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {renderBookRecTableData()}\n\n          </Table.Body>\n          </Table>\n        </Segment>\n        </div>\n\n\n        <div id=\"update-spoiler\" className=\"separate-form\">\n\n          <Segment inverted>\n        <h2> Update Spoiler Book </h2>\n        <Form inverted onSubmit={handleUpdateSpoilerBook}>\n          <Form.Group widths='equal'>\n            <Form.Input\n                  label=\"Title\"\n                  placeholder='The Name of The Wind'\n                  name='title'\n                  value={spoilerBookTitle}\n                  onChange={(e, { name, value }) => setSpoilerBookTitle(value)}\n            />\n            <Form.Input\n                  label=\"ISBN\"\n                  placeholder=\"1234567890123\"\n                  name='isbn'\n                  value={spoilerBookIsbn}\n                  onChange={(e, { name, value }) => setSpoilerBookIsbn(value)}\n            />\n            <Form.Button id=\"formsubmitbutton\" content='Update' />\n          </Form.Group>\n        </Form>\n        <Table unstackable selectable striped>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Title</Table.HeaderCell>\n                <Table.HeaderCell>ISBN</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {renderSpoilerBookData()}\n\n          </Table.Body>\n          </Table>\n        </Segment>\n        </div>\n\n        </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminPanel;\nexport { AdminPanel };\n",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":23},{"ruleId":"138","severity":1,"message":"142","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":12},{"ruleId":"134","replacedBy":"143"},{"ruleId":"136","replacedBy":"144"},{"ruleId":"138","severity":1,"message":"145","line":2,"column":52,"nodeType":"140","messageId":"141","endLine":2,"endColumn":57},{"ruleId":"138","severity":1,"message":"146","line":11,"column":8,"nodeType":"140","messageId":"141","endLine":11,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":69,"column":26,"nodeType":"149","messageId":"150","endLine":69,"endColumn":28},{"ruleId":"147","severity":1,"message":"148","line":72,"column":24,"nodeType":"149","messageId":"150","endLine":72,"endColumn":26},{"ruleId":"151","severity":1,"message":"152","line":137,"column":21,"nodeType":"153","endLine":137,"endColumn":86},{"ruleId":"138","severity":1,"message":"154","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":16},{"ruleId":"138","severity":1,"message":"155","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":12},{"ruleId":"156","severity":1,"message":"157","line":64,"column":11,"nodeType":"153","endLine":64,"endColumn":52},{"ruleId":"147","severity":1,"message":"148","line":27,"column":19,"nodeType":"149","messageId":"150","endLine":27,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":30,"column":24,"nodeType":"149","messageId":"150","endLine":30,"endColumn":26},{"ruleId":"138","severity":1,"message":"158","line":31,"column":7,"nodeType":"140","messageId":"141","endLine":31,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":33,"column":26,"nodeType":"149","messageId":"150","endLine":33,"endColumn":28},{"ruleId":"147","severity":1,"message":"148","line":36,"column":24,"nodeType":"149","messageId":"150","endLine":36,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":32,"column":21,"nodeType":"149","messageId":"150","endLine":32,"endColumn":23},{"ruleId":"147","severity":1,"message":"148","line":60,"column":36,"nodeType":"149","messageId":"150","endLine":60,"endColumn":38},{"ruleId":"147","severity":1,"message":"148","line":76,"column":14,"nodeType":"149","messageId":"150","endLine":76,"endColumn":16},{"ruleId":"138","severity":1,"message":"159","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":21},{"ruleId":"138","severity":1,"message":"160","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":14},{"ruleId":"138","severity":1,"message":"161","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":14},{"ruleId":"138","severity":1,"message":"159","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":21},{"ruleId":"151","severity":1,"message":"152","line":17,"column":11,"nodeType":"153","endLine":17,"endColumn":84},{"ruleId":"151","severity":1,"message":"152","line":20,"column":11,"nodeType":"153","endLine":20,"endColumn":106},{"ruleId":"138","severity":1,"message":"154","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":16},{"ruleId":"147","severity":1,"message":"162","line":56,"column":27,"nodeType":"149","messageId":"150","endLine":56,"endColumn":29},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.",["163"],["164"],"'Input' is defined but never used.","'Footer' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Button' is defined but never used.","'wave' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'coverLink' is assigned a value but never used.","'EventCalendar' is defined but never used.","'Card' is defined but never used.","'Link' is defined but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]