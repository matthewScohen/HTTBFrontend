{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n  'invalid-value': ({\n    paramName,\n    validValueDescription,\n    value\n  }) => {\n    if (!paramName || !validValueDescription) {\n      throw new Error(`Unexpected input to 'invalid-value' error.`);\n    }\n\n    return `The '${paramName}' parameter was given a value with an ` + `unexpected value. ${validValueDescription} Received a value of ` + `${JSON.stringify(value)}.`;\n  },\n  'not-an-array': ({\n    moduleName,\n    className,\n    funcName,\n    paramName\n  }) => {\n    if (!moduleName || !className || !funcName || !paramName) {\n      throw new Error(`Unexpected input to 'not-an-array' error.`);\n    }\n\n    return `The parameter '${paramName}' passed into ` + `'${moduleName}.${className}.${funcName}()' must be an array.`;\n  },\n  'incorrect-type': ({\n    expectedType,\n    paramName,\n    moduleName,\n    className,\n    funcName\n  }) => {\n    if (!expectedType || !paramName || !moduleName || !funcName) {\n      throw new Error(`Unexpected input to 'incorrect-type' error.`);\n    }\n\n    return `The parameter '${paramName}' passed into ` + `'${moduleName}.${className ? className + '.' : ''}` + `${funcName}()' must be of type ${expectedType}.`;\n  },\n  'incorrect-class': ({\n    expectedClass,\n    paramName,\n    moduleName,\n    className,\n    funcName,\n    isReturnValueProblem\n  }) => {\n    if (!expectedClass || !moduleName || !funcName) {\n      throw new Error(`Unexpected input to 'incorrect-class' error.`);\n    }\n\n    if (isReturnValueProblem) {\n      return `The return value from ` + `'${moduleName}.${className ? className + '.' : ''}${funcName}()' ` + `must be an instance of class ${expectedClass.name}.`;\n    }\n\n    return `The parameter '${paramName}' passed into ` + `'${moduleName}.${className ? className + '.' : ''}${funcName}()' ` + `must be an instance of class ${expectedClass.name}.`;\n  },\n  'missing-a-method': ({\n    expectedMethod,\n    paramName,\n    moduleName,\n    className,\n    funcName\n  }) => {\n    if (!expectedMethod || !paramName || !moduleName || !className || !funcName) {\n      throw new Error(`Unexpected input to 'missing-a-method' error.`);\n    }\n\n    return `${moduleName}.${className}.${funcName}() expected the ` + `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n  },\n  'add-to-cache-list-unexpected-type': ({\n    entry\n  }) => {\n    return `An unexpected entry was passed to ` + `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` + `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` + `strings with one or more characters, objects with a url property or ` + `Request objects.`;\n  },\n  'add-to-cache-list-conflicting-entries': ({\n    firstEntry,\n    secondEntry\n  }) => {\n    if (!firstEntry || !secondEntry) {\n      throw new Error(`Unexpected input to ` + `'add-to-cache-list-duplicate-entries' error.`);\n    }\n\n    return `Two of the entries passed to ` + `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` + `${firstEntry._entryId} but different revision details. Workbox is ` + `unable to cache and version the asset correctly. Please remove one ` + `of the entries.`;\n  },\n  'plugin-error-request-will-fetch': ({\n    thrownError\n  }) => {\n    if (!thrownError) {\n      throw new Error(`Unexpected input to ` + `'plugin-error-request-will-fetch', error.`);\n    }\n\n    return `An error was thrown by a plugins 'requestWillFetch()' method. ` + `The thrown error message was: '${thrownError.message}'.`;\n  },\n  'invalid-cache-name': ({\n    cacheNameId,\n    value\n  }) => {\n    if (!cacheNameId) {\n      throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n    }\n\n    return `You must provide a name containing at least one character for ` + `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` + `'${JSON.stringify(value)}'`;\n  },\n  'unregister-route-but-not-found-with-method': ({\n    method\n  }) => {\n    if (!method) {\n      throw new Error(`Unexpected input to ` + `'unregister-route-but-not-found-with-method' error.`);\n    }\n\n    return `The route you're trying to unregister was not  previously ` + `registered for the method type '${method}'.`;\n  },\n  'unregister-route-route-not-registered': () => {\n    return `The route you're trying to unregister was not previously ` + `registered.`;\n  },\n  'queue-replay-failed': ({\n    name\n  }) => {\n    return `Replaying the background sync queue '${name}' failed.`;\n  },\n  'duplicate-queue-name': ({\n    name\n  }) => {\n    return `The Queue name '${name}' is already being used. ` + `All instances of backgroundSync.Queue must be given unique names.`;\n  },\n  'expired-test-without-max-age': ({\n    methodName,\n    paramName\n  }) => {\n    return `The '${methodName}()' method can only be used when the ` + `'${paramName}' is used in the constructor.`;\n  },\n  'unsupported-route-type': ({\n    moduleName,\n    className,\n    funcName,\n    paramName\n  }) => {\n    return `The supplied '${paramName}' parameter was an unsupported type. ` + `Please check the docs for ${moduleName}.${className}.${funcName} for ` + `valid input types.`;\n  },\n  'not-array-of-class': ({\n    value,\n    expectedClass,\n    moduleName,\n    className,\n    funcName,\n    paramName\n  }) => {\n    return `The supplied '${paramName}' parameter must be an array of ` + `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` + `Please check the call to ${moduleName}.${className}.${funcName}() ` + `to fix the issue.`;\n  },\n  'max-entries-or-age-required': ({\n    moduleName,\n    className,\n    funcName\n  }) => {\n    return `You must define either config.maxEntries or config.maxAgeSeconds` + `in ${moduleName}.${className}.${funcName}`;\n  },\n  'statuses-or-headers-required': ({\n    moduleName,\n    className,\n    funcName\n  }) => {\n    return `You must define either config.statuses or config.headers` + `in ${moduleName}.${className}.${funcName}`;\n  },\n  'invalid-string': ({\n    moduleName,\n    funcName,\n    paramName\n  }) => {\n    if (!paramName || !moduleName || !funcName) {\n      throw new Error(`Unexpected input to 'invalid-string' error.`);\n    }\n\n    return `When using strings, the '${paramName}' parameter must start with ` + `'http' (for cross-origin matches) or '/' (for same-origin matches). ` + `Please see the docs for ${moduleName}.${funcName}() for ` + `more info.`;\n  },\n  'channel-name-required': () => {\n    return `You must provide a channelName to construct a ` + `BroadcastCacheUpdate instance.`;\n  },\n  'invalid-responses-are-same-args': () => {\n    return `The arguments passed into responsesAreSame() appear to be ` + `invalid. Please ensure valid Responses are used.`;\n  },\n  'expire-custom-caches-only': () => {\n    return `You must provide a 'cacheName' property when using the ` + `expiration plugin with a runtime caching strategy.`;\n  },\n  'unit-must-be-bytes': ({\n    normalizedRangeHeader\n  }) => {\n    if (!normalizedRangeHeader) {\n      throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n    }\n\n    return `The 'unit' portion of the Range header must be set to 'bytes'. ` + `The Range header provided was \"${normalizedRangeHeader}\"`;\n  },\n  'single-range-only': ({\n    normalizedRangeHeader\n  }) => {\n    if (!normalizedRangeHeader) {\n      throw new Error(`Unexpected input to 'single-range-only' error.`);\n    }\n\n    return `Multiple ranges are not supported. Please use a  single start ` + `value, and optional end value. The Range header provided was ` + `\"${normalizedRangeHeader}\"`;\n  },\n  'invalid-range-values': ({\n    normalizedRangeHeader\n  }) => {\n    if (!normalizedRangeHeader) {\n      throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n    }\n\n    return `The Range header is missing both start and end values. At least ` + `one of those values is needed. The Range header provided was ` + `\"${normalizedRangeHeader}\"`;\n  },\n  'no-range-header': () => {\n    return `No Range header was found in the Request provided.`;\n  },\n  'range-not-satisfiable': ({\n    size,\n    start,\n    end\n  }) => {\n    return `The start (${start}) and end (${end}) values in the Range are ` + `not satisfiable by the cached response, which is ${size} bytes.`;\n  },\n  'attempt-to-cache-non-get-request': ({\n    url,\n    method\n  }) => {\n    return `Unable to cache '${url}' because it is a '${method}' request and ` + `only 'GET' requests can be cached.`;\n  },\n  'cache-put-with-no-response': ({\n    url\n  }) => {\n    return `There was an attempt to cache '${url}' but the response was not ` + `defined.`;\n  },\n  'no-response': ({\n    url,\n    error\n  }) => {\n    let message = `The strategy could not generate a response for '${url}'.`;\n\n    if (error) {\n      message += ` The underlying error is ${error}.`;\n    }\n\n    return message;\n  },\n  'bad-precaching-response': ({\n    url,\n    status\n  }) => {\n    return `The precaching request for '${url}' failed with an HTTP ` + `status of ${status}.`;\n  },\n  'non-precached-url': ({\n    url\n  }) => {\n    return `createHandlerBoundToURL('${url}') was called, but that URL is ` + `not precached. Please pass in a URL that is precached instead.`;\n  },\n  'add-to-cache-list-conflicting-integrities': ({\n    url\n  }) => {\n    return `Two of the entries passed to ` + `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` + `${url} with different integrity values. Please remove one of them.`;\n  },\n  'missing-precache-entry': ({\n    cacheName,\n    url\n  }) => {\n    return `Unable to find a precached response in ${cacheName} for ${url}.`;\n  }\n};","map":{"version":3,"sources":["/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/react-crud/node_modules/workbox-core/models/messages/messages.js"],"names":["messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","method","methodName","normalizedRangeHeader","size","start","end","url","error","status","cacheName"],"mappings":"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","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed with an HTTP ` +\n            `status of ${status}.`;\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n};\n"]},"metadata":{},"sourceType":"module"}