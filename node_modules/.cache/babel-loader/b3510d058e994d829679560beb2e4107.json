{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n  googleAnalytics: 'googleAnalytics',\n  precache: 'precache-v2',\n  prefix: 'workbox',\n  runtime: 'runtime',\n  suffix: typeof registration !== 'undefined' ? registration.scope : ''\n};\n\nconst _createCacheName = cacheName => {\n  return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix].filter(value => value && value.length > 0).join('-');\n};\n\nconst eachCacheNameDetail = fn => {\n  for (const key of Object.keys(_cacheNameDetails)) {\n    fn(key);\n  }\n};\n\nexport const cacheNames = {\n  updateDetails: details => {\n    eachCacheNameDetail(key => {\n      if (typeof details[key] === 'string') {\n        _cacheNameDetails[key] = details[key];\n      }\n    });\n  },\n  getGoogleAnalyticsName: userCacheName => {\n    return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n  },\n  getPrecacheName: userCacheName => {\n    return userCacheName || _createCacheName(_cacheNameDetails.precache);\n  },\n  getPrefix: () => {\n    return _cacheNameDetails.prefix;\n  },\n  getRuntimeName: userCacheName => {\n    return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n  },\n  getSuffix: () => {\n    return _cacheNameDetails.suffix;\n  }\n};","map":{"version":3,"sources":["/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/react-crud/node_modules/workbox-core/_private/cacheNames.js"],"names":["_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","cacheName","filter","value","length","join","eachCacheNameDetail","fn","key","Object","keys","cacheNames","updateDetails","details","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAP;AACA,MAAMA,iBAAiB,GAAG;AACtBC,EAAAA,eAAe,EAAE,iBADK;AAEtBC,EAAAA,QAAQ,EAAE,aAFY;AAGtBC,EAAAA,MAAM,EAAE,SAHc;AAItBC,EAAAA,OAAO,EAAE,SAJa;AAKtBC,EAAAA,MAAM,EAAE,OAAOC,YAAP,KAAwB,WAAxB,GAAsCA,YAAY,CAACC,KAAnD,GAA2D;AAL7C,CAA1B;;AAOA,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AACpC,SAAO,CAACT,iBAAiB,CAACG,MAAnB,EAA2BM,SAA3B,EAAsCT,iBAAiB,CAACK,MAAxD,EACFK,MADE,CACMC,KAAD,IAAWA,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,CADxC,EAEFC,IAFE,CAEG,GAFH,CAAP;AAGH,CAJD;;AAKA,MAAMC,mBAAmB,GAAIC,EAAD,IAAQ;AAChC,OAAK,MAAMC,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAYlB,iBAAZ,CAAlB,EAAkD;AAC9Ce,IAAAA,EAAE,CAACC,GAAD,CAAF;AACH;AACJ,CAJD;;AAKA,OAAO,MAAMG,UAAU,GAAG;AACtBC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBP,IAAAA,mBAAmB,CAAEE,GAAD,IAAS;AACzB,UAAI,OAAOK,OAAO,CAACL,GAAD,CAAd,KAAwB,QAA5B,EAAsC;AAClChB,QAAAA,iBAAiB,CAACgB,GAAD,CAAjB,GAAyBK,OAAO,CAACL,GAAD,CAAhC;AACH;AACJ,KAJkB,CAAnB;AAKH,GAPqB;AAQtBM,EAAAA,sBAAsB,EAAGC,aAAD,IAAmB;AACvC,WAAOA,aAAa,IAAIf,gBAAgB,CAACR,iBAAiB,CAACC,eAAnB,CAAxC;AACH,GAVqB;AAWtBuB,EAAAA,eAAe,EAAGD,aAAD,IAAmB;AAChC,WAAOA,aAAa,IAAIf,gBAAgB,CAACR,iBAAiB,CAACE,QAAnB,CAAxC;AACH,GAbqB;AActBuB,EAAAA,SAAS,EAAE,MAAM;AACb,WAAOzB,iBAAiB,CAACG,MAAzB;AACH,GAhBqB;AAiBtBuB,EAAAA,cAAc,EAAGH,aAAD,IAAmB;AAC/B,WAAOA,aAAa,IAAIf,gBAAgB,CAACR,iBAAiB,CAACI,OAAnB,CAAxC;AACH,GAnBqB;AAoBtBuB,EAAAA,SAAS,EAAE,MAAM;AACb,WAAO3B,iBAAiB,CAACK,MAAzB;AACH;AAtBqB,CAAnB","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n"]},"metadata":{},"sourceType":"module"}