{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\n\nasync function copyResponse(response, modifier) {\n  const clonedResponse = response.clone(); // Create a fresh `ResponseInit` object by cloning the headers.\n\n  const responseInit = {\n    headers: new Headers(clonedResponse.headers),\n    status: clonedResponse.status,\n    statusText: clonedResponse.statusText\n  }; // Apply any user modifications.\n\n  const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit; // Create the new response from the body stream and `ResponseInit`\n  // modifications. Note: not all browsers support the Response.body stream,\n  // so fall back to reading the entire body into memory as a blob.\n\n  const body = canConstructResponseFromBodyStream() ? clonedResponse.body : await clonedResponse.blob();\n  return new Response(body, modifiedResponseInit);\n}\n\nexport { copyResponse };","map":{"version":3,"sources":["/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/react-crud/node_modules/workbox-core/copyResponse.js"],"names":["canConstructResponseFromBodyStream","copyResponse","response","modifier","clonedResponse","clone","responseInit","headers","Headers","status","statusText","modifiedResponseInit","body","blob","Response"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,kCAAT,QAAmD,kDAAnD;AACA,OAAO,eAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeC,YAAf,CAA4BC,QAA5B,EAAsCC,QAAtC,EAAgD;AAC5C,QAAMC,cAAc,GAAGF,QAAQ,CAACG,KAAT,EAAvB,CAD4C,CAE5C;;AACA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAYJ,cAAc,CAACG,OAA3B,CADQ;AAEjBE,IAAAA,MAAM,EAAEL,cAAc,CAACK,MAFN;AAGjBC,IAAAA,UAAU,EAAEN,cAAc,CAACM;AAHV,GAArB,CAH4C,CAQ5C;;AACA,QAAMC,oBAAoB,GAAGR,QAAQ,GAAGA,QAAQ,CAACG,YAAD,CAAX,GAA4BA,YAAjE,CAT4C,CAU5C;AACA;AACA;;AACA,QAAMM,IAAI,GAAGZ,kCAAkC,KAC3CI,cAAc,CAACQ,IAD4B,GACrB,MAAMR,cAAc,CAACS,IAAf,EADhC;AAEA,SAAO,IAAIC,QAAJ,CAAaF,IAAb,EAAmBD,oBAAnB,CAAP;AACH;;AACD,SAASV,YAAT","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n"]},"metadata":{},"sourceType":"module"}