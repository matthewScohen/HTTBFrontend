{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './getOrCreatePrecacheController.js';\nimport { generateURLVariations } from './generateURLVariations.js';\nimport '../_version.js';\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\n\nexport const getCacheKeyForURL = (url, options) => {\n  const precacheController = getOrCreatePrecacheController();\n  const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n\n  for (const possibleURL of generateURLVariations(url, options)) {\n    const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n\n    if (possibleCacheKey) {\n      return possibleCacheKey;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/matthewcohen/Desktop/HTTBProject/HTTBFrontend/react-crud/node_modules/workbox-precaching/utils/getCacheKeyForURL.js"],"names":["getOrCreatePrecacheController","generateURLVariations","getCacheKeyForURL","url","options","precacheController","urlsToCacheKeys","getURLsToCacheKeys","possibleURL","possibleCacheKey","get"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,6BAAT,QAA8C,oCAA9C;AACA,SAASC,qBAAT,QAAsC,4BAAtC;AACA,OAAO,gBAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC/C,QAAMC,kBAAkB,GAAGL,6BAA6B,EAAxD;AACA,QAAMM,eAAe,GAAGD,kBAAkB,CAACE,kBAAnB,EAAxB;;AACA,OAAK,MAAMC,WAAX,IAA0BP,qBAAqB,CAACE,GAAD,EAAMC,OAAN,CAA/C,EAA+D;AAC3D,UAAMK,gBAAgB,GAAGH,eAAe,CAACI,GAAhB,CAAoBF,WAApB,CAAzB;;AACA,QAAIC,gBAAJ,EAAsB;AAClB,aAAOA,gBAAP;AACH;AACJ;AACJ,CATM","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './getOrCreatePrecacheController.js';\nimport { generateURLVariations } from './generateURLVariations.js';\nimport '../_version.js';\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\nexport const getCacheKeyForURL = (url, options) => {\n    const precacheController = getOrCreatePrecacheController();\n    const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n    for (const possibleURL of generateURLVariations(url, options)) {\n        const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n        if (possibleCacheKey) {\n            return possibleCacheKey;\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}